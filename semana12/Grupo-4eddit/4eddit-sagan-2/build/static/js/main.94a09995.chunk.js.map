{"version":3,"sources":["style/theme.js","actions/Actions.js","containers/LoginPage/styled.js","containers/LoginPage/index.js","components/Post/styled.js","components/TopicVote/styled.js","components/Loading/index.js","components/TopicVote/index.js","components/Post/index.js","containers/NewPost/fieldsToForm.js","containers/NewPost/styled.js","containers/NewPost/index.js","containers/Feed/styled.js","containers/Feed/index.js","containers/Register/Register.js","components/CommentVote/styled.js","components/CommentVote/index.js","components/Comments/styled.js","components/Comments/index.js","components/NewComment/styled.js","components/NewComment/index.js","components/PostDetail/styled.js","components/PostDetail/index.js","containers/Router/index.js","reducers/posts.js","containers/Header/styled.js","reducers/index.js","containers/Header/index.js","containers/App/index.js","index.js"],"names":["createMuiTheme","baseUrl","setUser","userData","type","payload","getPosts","dispatch","a","token","localStorage","getItem","axios","get","headers","auth","response","setPosts","data","setLoadingOff","setLoadingFree","alert","console","log","posts","newUser","newUserData","getPostDetail","id","post","setPostDetail","TextFieldLogin","styled","TextField","ButtonLogin","Button","PaperLogin","Paper","TypographyLogin","Typography","LoginPage","props","handleInput","event","setState","target","name","value","handleLogin","preventDefault","state","email","password","login","this","goToFeed","elevation","variant","component","color","onSubmit","label","required","onChange","onClick","goToRegister","Component","connect","user","loginData","JSON","stringify","setItem","window","push","routes","cadastro","root","StyledPaper","WrapperTop","div","WrapperBottom","StyledAvatar","Avatar","StyledCommentIcon","CommentIcon","WrapperContent","WrapperDiv","Loading","Backdrop","style","zIndex","open","CircularProgress","TopicVote","handleWhitLoading","loading","handlewithVote","voteValue","sendValue","userVoteDirection","vote","direction","topicVote","topicId","upIcon","colorValue","transform","downIcon","votesCount","i","v","put","Post","textComment","text","commentsNumber","gna","Math","floor","random","calcHour","fulltime","Date","createdAt","inteiro","trunc","minutos","horas","dias","diasinteiro","datautc","diafull","getDate","monthfull","getMonth","yearfull","getFullYear","goToLogin","textData","key","selectedId","src","username","title","fieldsToForm","multiline","rows","TextFieldStyled","NewPost","handleInputChange","form","handleSubmission","newPost","FormControl","fullWidth","map","field","pattern","inputProps","min","margin","Feed","handleWhitSelect","postComments","goToPostDetail","searchResults","filter","toLowerCase","includes","searchTerms","postDataFull","item","postDataSearch","length","postdetails","userRegister","Register","handleInputnewUser","handleOnSubmit","newRegister","CommentVote","commentVote","commentId","ti","ci","Comments","formData","NewComment","newComment","PostDetail","postDetail","comments","Router","history","exact","path","initialState","action","terms","StyledAppBar","AppBar","WrapperIcon","WrapperDivLogo","WrapperUserData","StyledTextField","Header","setSearch","existUser","parse","userdata","size","setLogout","logodata","fontSize","searchdata","placeholder","InputProps","startAdornment","InputAdornment","position","clear","createBrowserHistory","middlewares","applyMiddleware","routerMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","combineReducers","router","connectRouter","compose","App","theme","CssBaseline","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.94a09995.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n    \"palette\": {\r\n        \"common\": {\r\n            \"black\": \"#000\",\r\n            \"white\": \"#fff\"\r\n        },\r\n        \"background\": {\r\n            \"paper\": \"#fff\",\r\n            \"default\": \"rgba(219, 224, 230, 1)\"\r\n        },\r\n        \"primary\": {\r\n            \"light\": \"rgba(88, 175, 240, 1)\",\r\n            \"main\": \"rgba(0, 121, 210, 1)\",\r\n            \"dark\": \"rgba(0, 71, 125, 1)\",\r\n            \"contrastText\": \"#fff\"\r\n        },\r\n        \"secondary\": {\r\n            \"light\": \"rgba(193, 198, 201, 1)\",\r\n            \"main\": \"rgba(134, 138, 141, 1)\",\r\n            \"dark\": \"rgba(102, 105, 107, 1)\",\r\n            \"contrastText\": \"rgba(255, 255, 255, 1)\"\r\n        },\r\n        \"error\": {\r\n            \"light\": \"#e57373\",\r\n            \"main\": \"#f44336\",\r\n            \"dark\": \"#d32f2f\",\r\n            \"contrastText\": \"#fff\"\r\n        },\r\n        \"text\": {\r\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\r\n            \"secondary\": \"rgba(0, 121, 210, 1)\",\r\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\r\n            \"hint\": \"rgba(65, 117, 5, 1)\"\r\n        }\r\n    }\r\n});\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = \"https://us-central1-missao-newton.cloudfunctions.net/fourEddit\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const loginData = {\r\n    email,\r\n    password\r\n  }\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/login`, loginData);\r\n    const token = response.data.token\r\n    const user = JSON.stringify(response.data.user)\r\n    console.log(response.data)\r\n    localStorage.setItem(\"token\", token)\r\n    localStorage.setItem(\"user\", user)\r\n    dispatch(setUser(response.data.user))\r\n    // dispatch(push(routes.root))  vou deixar comentado porque quando o login der certo ele tem que ir para a pagina do edu\r\n  } catch (error) {\r\n    window.alert(\"Desculpe, o login de deu errado, tente novamente\", error)\r\n  }\r\n}\r\n\r\nexport const setUser = (userData) => ({type: 'SET_USER', payload: {\r\n  userData\r\n}})\r\n\r\nexport const setSearch = (terms) => ({type: 'SET_SEARCH', payload: {\r\n  terms\r\n}})\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await axios.get(`${baseUrl}/posts`, {\r\n      headers: {\r\n        auth: token\r\n      }\r\n    })\r\n    dispatch(setPosts(response.data))\r\n    dispatch(setLoadingOff())\r\n    dispatch(setLoadingFree())\r\n  } catch (error) {\r\n    alert('erro ao logar. contate o suporte', error)\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst setPosts = (posts) => ({\r\n  type: 'SET_POSTS', payload: {\r\n    posts\r\n  }\r\n})\r\n\r\nexport const newPost = (form) => async (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await axios.post(`${baseUrl}/posts`, form, {\r\n      headers: {\r\n        auth: token\r\n      }\r\n    })\r\n    dispatch(getPosts())\r\n  } catch (error) {\r\n    alert('erro ao enviar. contate o suporte', error)\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const newRegister = (form) => async (dispatch) => {\r\n  console.log(form)\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/signup`, form)\r\n    dispatch(newUser(response.data))\r\n    const token = response.data.token\r\n    const user = JSON.stringify(response.data.user)\r\n    localStorage.setItem(\"user\", user)\r\n    localStorage.setItem(\"token\", token)\r\n    dispatch(setUser(response.data.user))\r\n  } catch (error) {\r\n    window.alert('Ops, não foi possível cadastrar, tente novamente!')\r\n    console.log(error)\r\n  }\r\n}\r\nexport const newUser = (newUserData) => ({\r\n  type: 'NEW_USER', payload: {\r\n    newUserData\r\n  }\r\n})\r\n\r\nexport const setLoadingOff = () => ({\r\n  type: 'SET_LOADING_OFF', payload: {\r\n  }\r\n})\r\nexport const setLoadingFree = () => ({\r\n  type: 'SET_LOADING_FREE', payload: {\r\n  }\r\n})\r\n\r\nexport const setLogout = () => (\r\n  localStorage.clear(),\r\n  {\r\n    type: 'SET_LOGOUT', payload: {\r\n\r\n    }\r\n  })\r\n\r\nexport const getPostDetail = (id) => async (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await axios.get(`${baseUrl}/posts/${id}`, {\r\n      headers: {\r\n        auth: token\r\n      }\r\n    })\r\n    console.log(response.data.post)\r\n    dispatch(setPostDetail(response.data.post))\r\n    dispatch(setLoadingOff())\r\n    dispatch(setLoadingFree())\r\n\r\n  } catch (error) {\r\n    alert('erro ao pegar detalhes. contate o suporte', error)\r\n    console.log(error)\r\n  }\r\n}\r\nconst setPostDetail = (post) => ({\r\n  type: 'SET_POST_DETAIL', payload: {\r\n    post\r\n  }\r\n})\r\n\r\nexport const newComment = (id, form) => async (dispatch) => {\r\n  console.log(form)\r\n  console.log(id)\r\n  try {\r\n    const token = localStorage.getItem(\"token\")\r\n    const response = await axios.post(`${baseUrl}/posts/${id}/comment`, form, {\r\n      headers: {\r\n        auth: token\r\n      }\r\n    })\r\n    dispatch(getPostDetail(id))\r\n    dispatch(setLoadingOff())\r\n    dispatch(setLoadingFree())\r\n\r\n  } catch (error) {\r\n    window.alert('Ops, não foi possível comentar!')\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const topicVote = (i, v) => async (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\")\r\n    const response = await axios.put(`${baseUrl}/posts/${i}/vote`, v, {\r\n      headers: {\r\n        auth: token\r\n      }\r\n    })\r\n    dispatch(getPosts())\r\n    dispatch(getPostDetail(i))\r\n    dispatch(setLoadingOff())\r\n    dispatch(setLoadingFree())\r\n  } catch (error) {\r\n    window.alert('não foi possivel votar')\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const commentVote = (ti, v, ci) => async (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\")\r\n    const response = await axios.put(`${baseUrl}/posts/${ti}/comment/${ci}/vote`, v, {\r\n      headers: {\r\n        auth: token\r\n      }\r\n    })\r\n    dispatch(getPostDetail(ti))\r\n    dispatch(setLoadingOff())\r\n    dispatch(setLoadingFree())\r\n  } catch (error) {\r\n    window.alert('não foi possivel votar')\r\n    console.log(error)\r\n  } \r\n}\r\n","import styled from 'styled-components';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport const TextFieldLogin = styled(TextField)`\r\n\r\n`\r\n\r\nexport const ButtonLogin = styled(Button)`\r\n\r\n`\r\n//esse paper é a div principal onde será posto o display\r\nexport const PaperLogin = styled(Paper)`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 60vw;\r\nheight: 60vh;\r\nmargin-left: 20vw;\r\n`\r\n\r\nexport const TypographyLogin = styled(Typography)`\r\nmargin: o auto;\r\n`","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from '../../actions/Actions';\r\nimport { push } from \"connected-react-router\";\r\nimport { routes } from \"../../containers/Router/index\";\r\nimport {TextFieldLogin} from './styled'\r\nimport {ButtonLogin} from './styled'\r\nimport {PaperLogin} from './styled'\r\nimport {TypographyLogin} from './styled' \r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: 'thales.eduardo@gmail.com',\r\n      password: '12345'\r\n    };\r\n  }\r\n\r\n  handleInput = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleLogin = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    this.props.login(email, password)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const token = localStorage.getItem(\"token\")\r\n\r\n    if(token !== null) {\r\n    this.props.goToFeed();\r\n    } \r\n  }\r\n\r\n\r\n  render() {\r\n    const { email, password } = this.state\r\n    return (\r\n      <PaperLogin elevation={2}>\r\n        <TypographyLogin variant=\"h2\" component=\"h3\" color='primary'>Faça seu login </TypographyLogin>\r\n        <form onSubmit={this.handleLogin}>\r\n          <TextFieldLogin\r\n            variant=\"outlined\"\r\n            name='email'\r\n            type='email'\r\n            label='Digite seu email'\r\n            required\r\n            value={email}\r\n            onChange={this.handleInput}\r\n          />\r\n          <TextFieldLogin\r\n            variant=\"outlined\"\r\n            name='password'\r\n            type='password'\r\n            label='Digite sua senha'\r\n            required\r\n            value={password}\r\n            onChange={this.handleInput}\r\n          />\r\n          <ButtonLogin type=\"submit\" variant=\"contained\" color='secondary'>Login</ButtonLogin>\r\n          <TypographyLogin variant=\"h5\" component=\"h3\"> Ou </TypographyLogin>\r\n          <hr />\r\n        </form>\r\n        <ButtonLogin onClick={this.props.goToRegister} variant=\"contained\" color='secondary'>Cadastre-se</ButtonLogin>\r\n      </PaperLogin>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.posts.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (email, password) => dispatch(login(email, password)),\r\n  goToRegister: () => dispatch(push(routes.cadastro)),\r\n  goToFeed: () => dispatch(push(routes.root))\r\n  // aqui eu devo criar o dispatch push para enviar o usuário para as paginas necessárias \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Avatar} from '@material-ui/core';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\n\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\ncursor: pointer;\r\n@media (min-width: 400px) {\r\n    width: 90%;\r\n  }\r\n`\r\nexport const WrapperTop = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-bottom: 10px;\r\n`\r\nexport const WrapperBottom = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-top: 10px;\r\n`\r\nexport const StyledAvatar= styled(Avatar)`\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-right: 5px;\r\n`\r\nexport const StyledCommentIcon= styled(CommentIcon)`\r\nmargin-right: 5px;\r\nfont-size: 20px;\r\n`\r\nexport const WrapperContent = styled.div`\r\nwidth: 100%;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\ncursor: pointer;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\nmargin-right: 10px;\r\n`","import React, {Component} from \"react\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            <Backdrop style={{zIndex: 10}} open={this.props.open}>\r\n            <CircularProgress color=\"primary\" />\r\n            </Backdrop> \r\n            </div>\r\n\r\n            );\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {topicVote} from \"../../actions/Actions\";\r\nimport {WrapperDiv} from './styled'\r\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nclass TopicVote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if(this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n    handlewithVote = (voteValue) => {\r\n        this.setState({loading: true})\r\n        let sendValue = ''\r\n        if (this.props.userVoteDirection === voteValue) {\r\n            sendValue = 0\r\n        } else if (this.props.userVoteDirection !== voteValue) {\r\n            sendValue = voteValue\r\n        }\r\n        let vote = {\r\n            direction: sendValue\r\n        }\r\n        this.props.topicVote(this.props.topicId, vote)\r\n    }\r\n\r\n    upIcon = () => {\r\n      let colorValue = 'gray'\r\n      if (this.props.userVoteDirection === 1) {\r\n        colorValue = 'green'\r\n      }\r\n      return {transform: 'rotate(270deg)', color: colorValue}\r\n    }\r\n    downIcon = () => {\r\n      let colorValue = 'gray'\r\n      if (this.props.userVoteDirection === -1) {\r\n        colorValue = 'orange'\r\n      }\r\n      return {transform: 'rotate(90deg)', color: colorValue}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WrapperDiv>\r\n                {<Loading \r\n                open={this.state.loading}\r\n                />}\r\n                <ForwardRoundedIcon onClick={() => {this.handlewithVote(1)}} style={this.upIcon()}/>\r\n                <Typography variant={'body1'}>{this.props.votesCount}</Typography>\r\n                <ForwardRoundedIcon onClick={() => {this.handlewithVote(-1)}} style={this.downIcon()}/>\r\n            </WrapperDiv>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    topicVote: (i, v) => dispatch(topicVote(i, v))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicVote)\r\n","import React, {Component} from \"react\";\r\nimport {StyledPaper, WrapperBottom, WrapperTop, StyledCommentIcon, WrapperContent, StyledAvatar} from './styled'\r\nimport TopicVote from '../TopicVote'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport {connect} from \"react-redux\";\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\n\r\nclass Post extends Component {\r\n\r\n    componentDidUpdate() {\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n        this.calcHour()\r\n    }\r\n\r\n    textComment = () => {\r\n        let text = 'comentarios'\r\n        if (this.props.commentsNumber === 1) {\r\n            text = 'comentario'\r\n        }\r\n        return text\r\n}\r\n    \r\n    gna = () => {\r\n        return (Math.floor(Math.random() * 9))\r\n    }\r\n\r\n    calcHour = () => {\r\n        let text = \"\"\r\n        let fulltime = (new Date() - new Date(this.props.createdAt))/1000/60/60\r\n        let inteiro = Math.trunc(fulltime)\r\n        let minutos = Math.floor((fulltime-inteiro)*60)\r\n        let horas = 0\r\n        let dias = 0\r\n        let diasinteiro = inteiro/24\r\n        if (diasinteiro > 1) {\r\n            dias = Math.trunc(diasinteiro)\r\n            horas = Math.floor((diasinteiro-dias)*24)\r\n        }\r\n        if (diasinteiro < 1) {\r\n            horas = (diasinteiro)*24\r\n        }\r\n\r\n        let datautc = new Date(this.props.createdAt)\r\n        let diafull = datautc.getDate()\r\n        let monthfull = datautc.getMonth()+1\r\n        let yearfull = datautc.getFullYear()\r\n\r\n        if (dias > 0) {\r\n            text = `${dias} dias, ${horas} horas e ${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n        } else if (dias <= 0 && horas > 0) {\r\n            text = `${horas} horas e ${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n        } else if (dias <= 0 && horas <= 0) {\r\n            text = `${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n        }\r\n        return text\r\n    }\r\n\r\n    render() {\r\n        const textData = (\r\n            this.calcHour()\r\n        )\r\n        return (\r\n                <StyledPaper>\r\n                    <TopicVote\r\n                        key={this.props.id}\r\n                        userVoteDirection={this.props.userVoteDirection}\r\n                        topicId={this.props.id}\r\n                        votesCount={this.props.votesCount}\r\n                    />\r\n                    <WrapperContent onClick={() => {this.props.selectedId(this.props.id)}}>\r\n                        <WrapperTop>\r\n                            <StyledAvatar src={`https://picsum.photos/1${this.gna()}${this.gna()}`} />\r\n                        <Typography variant={'caption'} color={'secondary'}><strong>r/categoria</strong> Criado por: <strong>u/{this.props.username}</strong> a {textData}</Typography>\r\n                        </WrapperTop>\r\n                        <div>\r\n                            <Typography variant={'h6'} color={'textPrimary'}>{this.props.title}</Typography>\r\n                            <Typography variant={'subtitle1'} color={'textPrimary'}>{this.props.text}</Typography>\r\n                        </div>\r\n                        <WrapperBottom>\r\n                            <StyledCommentIcon />\r\n                            <Typography variant={'caption'} color={'secondary'}> {this.props.commentsNumber} {this.textComment()}</Typography>\r\n                        </WrapperBottom>\r\n                    </WrapperContent>\r\n                </StyledPaper>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    goToLogin: () => dispatch(push(routes.login))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","export const fieldsToForm = [\r\n    {\r\n        name: \"title\",\r\n        label: \"Titulo\",\r\n        type: \"text\",\r\n        required: true,\r\n        title: \"Título do post\"\r\n    },\r\n    {\r\n        name: \"text\",\r\n        label: \"Texto da postagem\",\r\n        type: \"text\",\r\n        required: true,\r\n        title: \"Texto descrevendo a postagem\",\r\n        multiline: true,\r\n        rows: 5\r\n    }\r\n];\r\n","import styled from \"styled-components\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\n@media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 95%;\r\n    min-width: 95%;\r\n}\r\n`\r\n\r\nexport const TextFieldStyled = styled(TextField)`\r\nbackground-color: #f6f7f9;\r\ndisplay: flex;  \r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\ntext-align: center;\r\nalign-self: center;\r\n`\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\njustify-content: center\r\n`","import React, {Component} from \"react\";\r\nimport {fieldsToForm} from './fieldsToForm'\r\nimport {TextFieldStyled, WrapperDiv} from './styled'\r\nimport {connect} from \"react-redux\";\r\nimport {newPost} from \"../../actions/Actions\";\r\nimport {StyledPaper} from './styled'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loading from '../../components/Loading/index'\r\n\r\nclass NewPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            form: {},\r\n            loading: false\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if(this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        });\r\n    };\r\n    \r\n    handleSubmission = event => {\r\n        this.setState({loading: true})\r\n        event.preventDefault();\r\n        this.props.newPost(this.state.form)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n                <StyledPaper>\r\n                    {<Loading \r\n                    open={this.state.loading}\r\n                    />}\r\n                    <FormControl fullWidth>\r\n                    <form onSubmit={this.handleSubmission}>\r\n                        {fieldsToForm.map(field => {\r\n                            return (\r\n                                    <TextFieldStyled variant=\"outlined\"   \r\n                                        key={field.name}\r\n                                        id={field.name}\r\n                                        label={field.label}\r\n                                        name={field.name}\r\n                                        type={field.type}\r\n                                        onChange={this.handleInputChange}\r\n                                        pattern={field.pattern}\r\n                                        inputProps={{ pattern: field.pattern, min: field.min, title: field.title}}\r\n                                        min={field.min}\r\n                                        required={field.required}\r\n                                        title={field.title}\r\n                                        value={this.state.form[field.name]}\r\n                                        margin={'dense'}\r\n                                        fullWidth\r\n                                        multiline={field.multiline}\r\n                                        rows={field.rows}\r\n                                        />\r\n                            );\r\n                        })\r\n                    }\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Enviar\r\n                    </Button>\r\n                    </form>\r\n                    </FormControl>\r\n                </StyledPaper>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newPost: (form) => dispatch(newPost(form)),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\r\n","import styled from 'styled-components'\r\n\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\nimport { getPosts, getPostDetail } from '../../actions/Actions'\r\nimport Post from '../../components/Post/index'\r\nimport NewPost from '../../containers/NewPost/index'\r\nimport {WrapperDiv} from './styled'\r\nimport Loading from '../../components/Loading/index'\r\n\r\nclass Feed extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if(this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n        this.props.getPosts()\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.postComments !== null) {\r\n            this.props.goToPostDetail()\r\n        }\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n    }\r\n    handleWhitSelect = (event) => {\r\n        this.setState({loading: true})\r\n        this.props.getPostDetail(event)\r\n    };\r\n    render() {\r\n        let newdata = [...this.props.posts]\r\n        let searchResults = newdata.filter(post => \r\n            post.title.toLowerCase().includes(this.props.searchTerms.toLowerCase()) || post.text.toLowerCase().includes(this.props.searchTerms.toLowerCase()))\r\n\r\n        let postDataFull = (\r\n                this.props.posts && this.props.posts.map((item) => (\r\n                    <Post \r\n                    key={item.id}\r\n                    votesCount={item.votesCount}\r\n                    userVoteDirection={item.userVoteDirection}\r\n                    commentsNumber={item.commentsNumber}\r\n                    id={item.id}\r\n                    username={item.username}\r\n                    text={item.text}\r\n                    createdAt={item.createdAt}\r\n                    title={item.title}\r\n                    selectedId={this.handleWhitSelect}\r\n                    />\r\n                ))\r\n        )\r\n        let postDataSearch = (\r\n                this.props.posts && searchResults.map((item) => (\r\n                    <Post \r\n                    key={item.id}\r\n                    votesCount={item.votesCount}\r\n                    userVoteDirection={item.userVoteDirection}\r\n                    commentsNumber={item.commentsNumber}\r\n                    id={item.id}\r\n                    username={item.username}\r\n                    text={item.text}\r\n                    createdAt={item.createdAt}\r\n                    title={item.title}\r\n                    selectedId={this.handleWhitSelect}\r\n                    />\r\n                ))\r\n        )\r\n        \r\n            return (\r\n                <WrapperDiv>\r\n                    {<Loading \r\n                    open={this.state.loading}\r\n                    />}\r\n                    {<NewPost />}\r\n                    {this.props.searchTerms.length > 0 ? postDataSearch : postDataFull}\r\n                </WrapperDiv>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({posts: state.posts.posts, postComments: state.posts.postComments, user: state.posts.user, loading: state.posts.loading, searchTerms: state.posts.searchTerms});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    goToLogin: () => dispatch(push(routes.login)),\r\n    goToPostDetail: () => dispatch(push(routes.postdetails)),\r\n    getPosts: () => dispatch(getPosts()),\r\n    getPostDetail: (id) => dispatch(getPostDetail(id))\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { push } from \"connected-react-router\";\r\nimport { routes } from \"../../containers/Router/index\";\r\nimport { newRegister } from \"../../actions/Actions\"\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst userRegister = [\r\n  {\r\n    name: 'username',\r\n    label: 'Nome do novo Usuário',\r\n    type: 'text',\r\n    pattern: '[a-zA-Z]{3,}',\r\n    title: 'nome do usuário com no mínimo 3 letras'\r\n  },\r\n  {\r\n    name: 'email',\r\n    label: 'email do novo Usuário',\r\n    type: 'email',\r\n    title: 'email completo do usuário'\r\n  },\r\n  {\r\n    name: 'password',\r\n    label: 'senha do novo Usuário',\r\n    type: 'password',\r\n    pattern: '{5,}',\r\n    title: 'nova senha com no mínimo 5 digitos'\r\n  }\r\n]\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      form: {}\r\n    }\r\n  }\r\n\r\n\r\n  handleInputnewUser = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token !== null) {\r\n      this.props.goToFeed();\r\n    }\r\n  }\r\n\r\n\r\n  handleOnSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.newRegister(this.state.form);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleOnSubmit}>\r\n          {userRegister.map(field => {\r\n            return (\r\n              <div>\r\n                <label>{field.label}</label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  name={field.name}\r\n                  type={field.type}\r\n                  value={this.state.form[field.name]}\r\n                  required={field.required}\r\n                  onChange={this.handleInputnewUser}\r\n                  title={field.title}\r\n                />\r\n              </div>\r\n            )\r\n          })}\r\n          <Button type=\"submit\" variant=\"contained\">Cadastrar</Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.posts.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  goToFeed: () => dispatch(push(routes.root)),\r\n  newRegister: (form) => dispatch(newRegister(form))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import styled from 'styled-components'\r\n\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\ncursor: pointer;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {commentVote} from \"../../actions/Actions\";\r\nimport {WrapperDiv} from './styled'\r\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nclass CommentVote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if(this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handlewithVote = (voteValue) => {\r\n        this.setState({loading: true})\r\n        let sendValue = ''\r\n        if (this.props.userVoteDirection === voteValue) {\r\n            sendValue = 0\r\n        } else if (this.props.userVoteDirection !== voteValue) {\r\n            sendValue = voteValue\r\n        }\r\n        let vote = {\r\n            direction: sendValue\r\n        }\r\n        this.props.commentVote(this.props.topicId, vote, this.props.commentId)\r\n    }\r\n\r\n    upIcon = () => {\r\n        let colorValue = 'gray'\r\n        if (this.props.userVoteDirection === 1) {\r\n            colorValue = 'green'\r\n        }\r\n        return {transform: 'rotate(270deg)', color: colorValue}\r\n    }\r\n    downIcon = () => {\r\n        let colorValue = 'gray'\r\n        if (this.props.userVoteDirection === -1) {\r\n            colorValue = 'orange'\r\n        }\r\n        return {transform: 'rotate(90deg)', color: colorValue}\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <WrapperDiv>\r\n            {<Loading \r\n            open={this.state.loading}\r\n            />}\r\n            <ForwardRoundedIcon onClick={() => {this.handlewithVote(1)}} style={this.upIcon()}/>\r\n            <Typography variant={'body1'}>{this.props.votesCount}</Typography>\r\n            <ForwardRoundedIcon onClick={() => {this.handlewithVote(-1)}} style={this.downIcon()}/>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => ({loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    commentVote: (ti, v, ci) => dispatch(commentVote(ti, v, ci))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentVote)\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Avatar} from '@material-ui/core';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 10px;\r\n`\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\n`\r\nexport const WrapperTop = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-bottom: 10px;\r\n`\r\nexport const StyledAvatar= styled(Avatar)`\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-right: 5px;\r\n`\r\nexport const StyledCommentIcon= styled(CommentIcon)`\r\nmargin-right: 5px;\r\nfont-size: 15px;\r\n`\r\nexport const WrapperContent = styled.div`\r\nwidth: 100%;\r\n`","import React, {Component} from \"react\";\r\nimport CommentVote from '../../components/CommentVote/index'\r\nimport {StyledPaper, WrapperBottom, WrapperTop, StyledCommentIcon, WrapperContent, StyledAvatar} from './styled'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nclass Comments extends Component {\r\n\r\n    calcHour = () => {\r\n        let text = \"\"\r\n        let fulltime = (new Date() - new Date(this.props.createdAt))/1000/60/60\r\n        let inteiro = Math.trunc(fulltime)\r\n        let minutos = Math.floor((fulltime-inteiro)*60)\r\n        let horas = 0\r\n        let dias = 0\r\n        let diasinteiro = inteiro/24\r\n        if (diasinteiro > 1) {\r\n            dias = Math.trunc(diasinteiro)\r\n            horas = Math.floor((diasinteiro-dias)*24)\r\n        }\r\n        if (diasinteiro < 1) {\r\n            horas = (diasinteiro)*24\r\n        }\r\n\r\n        let datautc = new Date(this.props.createdAt)\r\n        let diafull = datautc.getDate()\r\n        let monthfull = datautc.getMonth()+1\r\n        let yearfull = datautc.getFullYear()\r\n\r\n        if (dias > 0) {\r\n            text = `${dias} dias, ${horas} horas e ${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n        } else if (dias <= 0 && horas > 0) {\r\n            text = `${horas} horas e ${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n        } else if (dias <= 0 && horas <= 0) {\r\n            text = `${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n        }\r\n        return text\r\n\r\n    }\r\n\r\n    render() {\r\n        const textData = (\r\n            this.calcHour()\r\n        )\r\n        return (\r\n            <StyledPaper>\r\n                <CommentVote \r\n                    commentId={this.props.id}\r\n                    votesCount={this.props.votesCount}\r\n                    userVoteDirection={this.props.userVoteDirection}\r\n                    topicId={this.props.topicId}\r\n                />\r\n                <WrapperContent>\r\n                    <WrapperTop>\r\n                        <Typography variant={'caption'} color={'secondary'}>Comentado por <strong> {this.props.username}</strong> a {textData} </Typography>\r\n                    </WrapperTop>\r\n                    <div>\r\n                        <Typography variant={'subtitle2'} color={'textPrimary'}>{this.props.text}</Typography>\r\n                    </div>\r\n                </WrapperContent>\r\n            </StyledPaper>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Comments\r\n","import styled from \"styled-components\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\n@media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 95%;\r\n    min-width: 95%;\r\n}\r\n`\r\n\r\nexport const TextFieldStyled = styled(TextField)`\r\nbackground-color: #f6f7f9;\r\ndisplay: flex;  \r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\ntext-align: center;\r\nalign-self: center;\r\n`\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\njustify-content: center\r\n`","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { push } from \"connected-react-router\";\r\nimport { routes } from \"../../containers/Router/index\";\r\nimport { newComment } from \"../../actions/Actions\"\r\nimport {TextFieldStyled, StyledPaper, WrapperDiv} from './styled'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\n\r\n\r\nconst formData = [\r\n    {\r\n        name: 'text',\r\n        label: 'Novo comentário',\r\n        type: 'text',\r\n        multiline: true,\r\n        rows: 3,\r\n        title: 'Escreva um novo comentário'\r\n    }\r\n]\r\n\r\nclass NewComment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {},\r\n            loading: false\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if(this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        });\r\n    };\r\n\r\n    handleOnSubmit = event => {\r\n        this.setState({loading: true})\r\n        event.preventDefault();\r\n        this.props.newComment(this.props.id, this.state.form);\r\n        console.log(\"teste \")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledPaper>\r\n                {<Loading \r\n                    open={this.state.loading}\r\n                    />}\r\n                <FormControl fullWidth>\r\n                <form onSubmit={this.handleOnSubmit}>\r\n                    {formData.map(field => {\r\n                        return (\r\n                                <TextFieldStyled variant=\"outlined\"\r\n                                    key={this.props.id}\r\n                                    label={field.label}\r\n                                    name={field.name}\r\n                                    type={field.type}\r\n                                    value={this.state.form[field.name]}\r\n                                    required={field.required}\r\n                                    multiline={field.multiline}\r\n                                    rows={field.rows}\r\n                                    fullWidth\r\n                                    onChange={this.handleInputChange}\r\n                                    title={field.title}\r\n                                />\r\n                        )\r\n                    })}\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Comentar\r\n                    </Button>\r\n                    </form>\r\n                </FormControl>\r\n            </StyledPaper>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({user: state.posts.user, loading: state.posts.loading})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    goToFeed: () => dispatch(push(routes.root)),\r\n    newComment: (id, form) => dispatch(newComment(id, form))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewComment)\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Avatar} from '@material-ui/core';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\n`\r\nexport const WrapperTop = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-bottom: 10px;\r\n`\r\nexport const WrapperBottom = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-top: 10px;\r\n`\r\nexport const StyledAvatar= styled(Avatar)`\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-right: 5px;\r\n`\r\nexport const StyledCommentIcon= styled(CommentIcon)`\r\nmargin-right: 5px;\r\nfont-size: 15px;\r\n`\r\nexport const WrapperContent = styled.div`\r\nwidth: 100%;\r\n`\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Comments from '../Comments/index'\r\nimport NewComment from \"../NewComment/index\"\r\nimport Post from '../../components/Post/index'\r\nimport {WrapperDiv} from './styled'\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nclass PostDetail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if(this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    textComment = () => {\r\n        let text = 'comentarios'\r\n        if (this.props.commentsNumber === 1) {\r\n            text = 'comentario'\r\n        }\r\n        return text\r\n      }\r\n      \r\n    gna = () => {\r\n        return (Math.floor(Math.random() * 9))\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const post = {\r\n            ...this.props.postDetail\r\n        }\r\n\r\n        return (\r\n            <WrapperDiv>\r\n                {<Loading \r\n                    open={this.state.loading}\r\n                    />}\r\n                <Post \r\n                    key={post.id}\r\n                    votesCount={post.votesCount}\r\n                    userVoteDirection={post.userVoteDirection}\r\n                    commentsNumber={post.commentsNumber}\r\n                    id={post.id}\r\n                    username={post.username}\r\n                    text={post.text}\r\n                    createdAt={post.createdAt}\r\n                    title={post.title}\r\n                    selectedId={() => {console.log(post.id)}}\r\n                />\r\n                    <NewComment\r\n                        id={post.id}\r\n                    />\r\n                    {this.props.postDetail && this.props.postDetail.comments.map((item) => (\r\n                        <Comments\r\n                            key={item.id}\r\n                            votesCount={item.votesCount}\r\n                            userVoteDirection={item.userVoteDirection}\r\n                            id={item.id}\r\n                            username={item.username}\r\n                            text={item.text}\r\n                            createdAt={item.createdAt}\r\n                            topicId={post.id}\r\n                        />\r\n                    ))}\r\n            </WrapperDiv>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ postDetail: state.posts.postDetail,  user: state.posts.user, loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    goToLogin: () => dispatch(push(routes.login))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\r\n","import React from \"react\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LoginPage from \"../LoginPage/index\";\r\nimport Feed from \"../Feed/index\";\r\nimport Register from \"../Register/Register\";\r\nimport PostDetail from '../../components/PostDetail/index'\r\n\r\nexport const routes = {\r\n  root: \"/\",\r\n  login: \"/login\",\r\n  cadastro:\"/register\",\r\n  postdetails: \"/details\",\r\n  \r\n  // Outras rotas aqui\r\n};\r\n\r\nfunction Router(props) {\r\n  return (\r\n    <ConnectedRouter history={props.history}>\r\n      <Switch>\r\n        <Route exact path={routes.root} component={Feed} />\r\n        <Route exact path={routes.login} component={LoginPage} />\r\n        <Route exact path={routes.cadastro} component={Register} />\r\n        <Route exact path={routes.postdetails} component={PostDetail} />\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","const initialState = {\r\n    posts: [],\r\n    user: [],\r\n    postDetail: null,\r\n    postComments: null,\r\n    topicVote: null,\r\n    loading: '',\r\n    searchTerms: ''\r\n}\r\n\r\nconst posts = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: action.payload.posts.posts\r\n            }\r\n        case 'SET_USER':\r\n            return{\r\n                ...state,\r\n                user: action.payload.userData\r\n            }\r\n            case 'NEW_USER':\r\n            return{\r\n                ...state,\r\n                newUser: action.payload.newUserData\r\n            }\r\n            case 'SET_LOGOUT':\r\n            return{\r\n                ...state,\r\n                user: []\r\n            }\r\n        case 'SET_POST_DETAIL':\r\n            return {\r\n                ...state,\r\n                postDetail: action.payload.post,\r\n                postComments: action.payload.post.comments\r\n            }\r\n        case 'SET_LOADING_OFF':\r\n            return {\r\n                ...state,\r\n                loading: 'desliga'\r\n            }\r\n        case 'SET_LOADING_FREE':\r\n            return {\r\n                ...state,\r\n                loading: ''\r\n            }\r\n        case 'SET_SEARCH':\r\n            return {\r\n                ...state,\r\n                searchTerms: action.payload.terms\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default posts\r\n","import styled from 'styled-components'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport const WrapperDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\nexport const StyledAppBar = styled(AppBar)`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nbackground-color: white;\r\nmargin-bottom: 20px;\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 5px;\r\n}\r\n`\r\nexport const WrapperIcon = styled.div`\r\nbackground-color: darkorange;\r\npadding: 10px;\r\nborder-radius: 50%;\r\nwidth: auto;\r\nheight: width;\r\nmargin: 20px;\r\n@media (max-width: 768px) {\r\n    margin: 10px;\r\n}\r\n`\r\nexport const WrapperDivLogo = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\ncursor: pointer\r\n`\r\nexport const WrapperUserData = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nmargin: 5px;\r\n@media (max-width: 768px) {\r\n    visibility: hidden;\r\n    max-height: 0;\r\n}\r\n`\r\nexport const StyledTextField = styled(TextField)`\r\nbackground-color: #f6f7f9;\r\nalign-self: center;\r\n`","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport posts from './posts'\r\n\r\nexport const generateReducers = history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    posts\r\n    // Outros reducers aqui\r\n  });\r\n","import React, {Component} from \"react\";\r\nimport {WrapperDiv} from './styled'\r\nimport {connect} from \"react-redux\";\r\nimport {setLogout, setSearch, setUser} from '../../actions/Actions'\r\nimport {\r\n    StyledAppBar,\r\n    WrapperDivLogo,\r\n    WrapperIcon,\r\n    WrapperUserData,\r\n    StyledTextField\r\n} from './styled'\r\nimport RedditIcon from '@material-ui/icons/Reddit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n            searchTerms: \"\"\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const existUser = JSON.parse(localStorage.getItem('user'))\r\n        if (existUser !== null) {\r\n            this.props.setUser(existUser)\r\n        }\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const {value} = event.target;\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                searchTerms: value\r\n            }\r\n        })\r\n        this.props.setSearch(this.state.form.searchTerms)\r\n    };\r\n\r\n    render() {\r\n        const userdata = (\r\n            <WrapperUserData>\r\n                <WrapperUserData>\r\n                    <Button variant=\"outlined\"\r\n                        size={'small'}\r\n                        color=\"primary\"\r\n                        onClick={\r\n                            this.props.setLogout\r\n                    }>Logout</Button>\r\n                </WrapperUserData>\r\n                <div>\r\n                    <Typography variant={'subtitle2'}\r\n                        color={'textPrimary'}>User: {\r\n                        this.props.user === null ? \"\" : this.props.user.username\r\n                    }</Typography>\r\n                    <Typography variant={'subtitle2'}\r\n                        color={'textPrimary'}>Email: {\r\n                        this.props.user === null ? \"\" : this.props.user.email\r\n                    }</Typography>\r\n                </div>\r\n            </WrapperUserData>\r\n        )\r\n        const logodata = (\r\n            <WrapperDiv onClick={this.props.goToFeed}>\r\n                <WrapperIcon>\r\n                    <RedditIcon fontSize={'large'}/>\r\n                </WrapperIcon>\r\n                <WrapperDivLogo>\r\n                    <Typography variant={'h5'}\r\n                        color={'textPrimary'}>4eddit</Typography>\r\n                    <Typography variant={'subtitle2'}\r\n                        color={'textPrimary'}>Turma 2 - Sagan</Typography>\r\n                </WrapperDivLogo>\r\n            </WrapperDiv>\r\n        )\r\n        const searchdata = (\r\n            <WrapperDiv>\r\n                <StyledTextField placeholder=\"Search\" variant=\"outlined\" value={this.state.searchTerms} onChange={this.handleInputChange}\r\n                    InputProps={\r\n                        {\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                        }\r\n                    }/>\r\n            </WrapperDiv>\r\n        )\r\n        return (\r\n            <StyledAppBar position={'relative'} elevation={0}>\r\n                {\r\n                this.props.user.length === 0 ? \"\" : logodata\r\n            }\r\n                {\r\n                this.props.user.length === 0 ? \"\" : searchdata\r\n            }\r\n                {\r\n                this.props.user.length === 0 ? \"\" : userdata\r\n            } </StyledAppBar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({user: state.posts.user});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setLogout: () => dispatch(setLogout()),\r\n    setUser: (data) => dispatch(setUser(data)),\r\n    setSearch: (terms) => dispatch(setSearch(terms)),\r\n    goToFeed: () => dispatch(push(routes.root))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"../../style/theme\";\r\nimport Router from \"../Router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { generateReducers } from \"../../reducers\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport Header from '../Header/index'\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst middlewares = [\r\n  applyMiddleware(routerMiddleware(history), thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    : f => f\r\n];\r\n\r\nconst store = createStore(generateReducers(history), compose(...middlewares));\r\n\r\nexport const App = () => (\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Header />\r\n      <Router history={history} />\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}